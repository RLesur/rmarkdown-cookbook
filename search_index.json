[
["index.html", "Mastering R Markdown Chapter 1 About the book 1.1 Recommended Reading", " Mastering R Markdown Michael Harper 2018-05-01 Chapter 1 About the book This book is in a very early stage of development. If you have any suggestions on what should be included within this book, please get in touch via GitHub: https://github.com/mikey-harper/mastering-rmarkdown This book aims to bring together lots of useful tips for R Markdown. One of the common criticisms of markdown as a language is that it naturally limits what you can write. Users often therefore feel limited in what they can achieve with advanced customisation. However, we can easily edit. 1.1 Recommended Reading There are already several fantastic books out there which you may have already read: Dynamic documents and knitr R Markdown: The Definitive guide Authoring books with bookdown Blogdown "],
["intro.html", "Chapter 2 Introduction 2.1 Overview of Book", " Chapter 2 Introduction Motivation for book What readers can learn Feedback and errata Suggested examples 2.1 Overview of Book Explain the structure of the book "],
["basics.html", "Chapter 3 Basics 3.1 Quick Tips", " Chapter 3 Basics What should be known before reading this book Recommended reading bookdown is used as the default engine as it provides improvements 3.1 Quick Tips Short index of some basic ideas on how to improve R Markdown documents Include current date in R Markdown https://stackoverflow.com/questions/23449319/yaml-current-date-in-rmarkdown/23529410#23529410 "],
["managing-big-projects.html", "Chapter 4 Managing Big Projects 4.1 Sourcing Files 4.2 Caching 4.3 Notifications", " Chapter 4 Managing Big Projects Practical tips on how a big project should be managed source is particularly useful for loading external scripts so that the R Markdown project isnâ€™t too bloated with code. Ideas: - Use (ref:tag) to store page formatting options which might need to be reused. For example a page break 4.1 Sourcing Files A benefit of using R Markdown is that it is easy source(&quot;yourScript.R&quot;) 4.2 Caching Caching Ways it can be tailored to suit analysis. This cache invalidation is a great example: https://stackoverflow.com/questions/18376008/invalidate-a-chunks-cache-when-uncached-chunk-changes 4.3 Notifications Can link R Markdown with notifications if have long analysis "],
["latex.html", "Chapter 5 LaTeX 5.1 Inserting Commands 5.2 LaTeX preamble 5.3 Multi-figure plots 5.4 Cross-output 5.5 LaTeX subfigures 5.6 Changing citation Engine 5.7 Altering Citation Style", " Chapter 5 LaTeX For many authors, the main of long reports or books, the primary output will be LaTeX. In this chapter, we discuss approaches which can be used to customise the output of PDF reports. Users should approach with a note of caution. One of the major benefits of R Markdown is 5.1 Inserting Commands 5.2 LaTeX preamble 5.3 Multi-figure plots If we need to print multiple output graphs or figures, there are several ways this can be achieved. 5.4 Cross-output As explained in https://bookdown.org/yihui/rmarkdown/r-code.html#figures of (???), we can place multiple figures side-by-side using the fig.hold='hold' along with the out.width option. As an example below, we have set the out.width=&quot;50%&quot;: plot(1:10) plot(rnorm(10), pch=19) Figure 5.1: Side-by-side figures The main benefits of this approach is that it is easily achieved, and also works for both PDF and HTML outputs. 5.5 LaTeX subfigures When writing a document you may want to include some slightly more complicated figures with multiple images. Subfigures are a useful LaTeX feature which allows us to achieve this by plotting multiple figures within a single plot and providing each with their own subcaption. Subfigures require the LaTeX package subfig. The line \\usepackage{subfig} must therefore be included within the YAML, or if you are using an external tex template you can add this to that file. For example: As listed within the knitr chunk options, subfigures require a few additional settings to be set in the chunk header: fig.subcap is a list of the captions for subfigures fig.ncol: the number of columns of subfigures out.width: the output width of the figures. You will normally set this 100% divided by the number of sub columns. An example is demonstrated below: ```yaml output: pdf_document header-includes: - \\usepackage{subfig} ``` ```{r fig-sub, fig.cap=&#39;two plots&#39;, fig.subcap=c(&#39;one plot&#39;, &#39;the other one&#39;), out.width=&#39;.49\\\\linewidth&#39;, fig.asp=1, fig.ncol = 2} plot(1:10) plot(rnorm(10), pch=19) ``` The output is shown in Figure 5.2. knitr::include_graphics(&quot;images/subfigure.png&quot;, dpi = NA) Figure 5.2: An example subcaption 5.5.1 Using with list 5.6 Changing citation Engine 5.7 Altering Citation Style Using short author citations: https://stackoverflow.com/questions/48303890/using-short-author-citations-in-bookdown-rmarkdown?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa "],
["html-output.html", "Chapter 6 HTML Output 6.1 Tabbed headings", " Chapter 6 HTML Output Take some of the details from here: https://rmarkdown.rstudio.com/html_document_format.html 6.1 Tabbed headings https://stackoverflow.com/questions/38062706/rmarkdown-tabbed-and-untabbed-headings?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa "],
["multi-format-projects.html", "Chapter 7 Multi-format projects 7.1 Output-specific functions 7.2 Designing output", " Chapter 7 Multi-format projects One of the main benefits of R Markdown is that it is easy to create documents in a single source file and generate PDF, HTML, ebook and Word documents. This book example is available in all three formats. Project should therefore ideally be designed to be flexible for the multiple outputs. However, users will often find themselves wanting to fine-tune the output, and doing so will often require -Designing custom behavior which can respond to change in outputs using is_latex_output etc. For example, you may want to have interactive tables using DT:datatable in the HTML output but print static versions in the PDF. 7.1 Output-specific functions bookdown will take screenshots of HTML widgets in static reports library(ggplot2) library(plotly) p &lt;- ggplot(data = diamonds, aes(x = cut, fill = clarity)) + geom_bar(position = &quot;dodge&quot;) ggplotly(p) 7.2 Designing output If we wish to design our own format-specific function we can use the functions knitr::is_latex_output() andknitr::is_html_output`. These function will return a TRUE/FALSE action knitr::is_html_output() "],
["knitr-hooks.html", "Chapter 8 Knitr Hooks", " Chapter 8 Knitr Hooks Knitr hooks: these are explained within previous R Markdown book Include practical examples could be very useful for readers to see the power of it. Use some of these: https://gist.github.com/yihui/2629886 "],
["tables.html", "Chapter 9 Tables", " Chapter 9 Tables Using kableExtra to style tables "],
["references.html", "Chapter 10 References", " Chapter 10 References "]
]
